version: '3.2'

services:
  proxy:
    image: 'jwilder/nginx-proxy'
    container_name: 'proxy'
    ports:
      - '${PORT}:80'
    volumes:
      - './nginx/vhosts:/etc/nginx/vhost.d'
      - './nginx/config:/etc/nginx/conf.d'
      - '/var/run/docker.sock:/tmp/docker.sock:ro'
      - './nginx/certs:/etc/nginx/certs'

## прокси для статики
  nginx:
    image: nginx
    container_name: nginx-static
    env_file:
      - .env
    volumes:
      - '../frontend:/usr/share/nginx/html'
    environment:
      VIRTUAL_HOST: "${FRONTEND}"

  static:
    build:
      context: ./static
    container_name: static
    volumes:
       - '../frontend:/var/www/html'

## прокси для php
  nginx-php:
    image: nginx
    container_name: nginx-php
    env_file:
      - .env
    volumes:
      - './nginx/config.yii2:/etc/nginx/conf.d'
    environment:
      VIRTUAL_HOST: "${BACKEND}"
    links:
      - php
    volumes_from:
      - php

## тут происходит обработка пхп
  php:
    container_name: php
    build:
      context: ./php/
    volumes:
      - '../backend:/var/www/html'

  mysql:
    image: mysql:5.7
    container_name: mysql
    env_file:
      - .env
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - ./mysql:/docker-entrypoint-initdb.d
    command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']

## тут происходит подгрузка зависимостей для бека и фронта
  php-cli:
    container_name: php-cli
    build:
      context: ./php/
    volumes:
      - "../backend:/var/www/html"
    command: bash -c  "${BACKEND_DEPLOY_SCRIPT}"

  js-cli:
    container_name: js-cli
    build:
      context: ./static
    volumes:
      - "../frontend:/var/www/html"
    command: bash -c  "${FRONTEND_DEPLOY_SCRIPT}"